"""empty message

Revision ID: e268a795ce75
Revises: ad0a9a2bf745
Create Date: 2022-04-23 23:10:47.516837

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e268a795ce75'
down_revision = 'ad0a9a2bf745'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('index_chats_on_author_id_and_receiver_id', table_name='chats')
    op.drop_table('chats')
    op.drop_index('index_active_storage_blobs_on_key', table_name='active_storage_blobs')
    op.drop_table('active_storage_blobs')
    op.drop_index('index_spots_on_bird_id', table_name='spots')
    op.drop_index('index_spots_on_user_id', table_name='spots')
    op.drop_table('spots')
    op.drop_table('ar_internal_metadata')
    op.drop_table('schema_migrations')
    op.drop_table('birds')
    op.drop_index('index_direct_messages_on_chat_id', table_name='direct_messages')
    op.drop_index('index_direct_messages_on_user_id', table_name='direct_messages')
    op.drop_table('direct_messages')
    op.drop_index('index_active_storage_attachments_on_blob_id', table_name='active_storage_attachments')
    op.drop_index('index_active_storage_attachments_uniqueness', table_name='active_storage_attachments')
    op.drop_table('active_storage_attachments')
    op.add_column('users', sa.Column('password_hash', sa.String(), nullable=False))
    op.drop_index('index_users_on_email', table_name='users')
    op.drop_index('index_users_on_reset_password_token', table_name='users')
    op.create_unique_constraint(None, 'users', ['username'])
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'remember_created_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'encrypted_password')
    op.drop_column('users', 'reset_password_sent_at')
    op.drop_column('users', 'reset_password_token')
    op.drop_column('users', 'bio')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('bio', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('reset_password_token', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('reset_password_sent_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('encrypted_password', sa.VARCHAR(), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('remember_created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('index_users_on_reset_password_token', 'users', ['reset_password_token'], unique=False)
    op.create_index('index_users_on_email', 'users', ['email'], unique=False)
    op.drop_column('users', 'password_hash')
    op.create_table('active_storage_attachments',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('record_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('record_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('blob_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['blob_id'], ['active_storage_blobs.id'], name='fk_rails_c3b3935057'),
    sa.PrimaryKeyConstraint('id', name='active_storage_attachments_pkey')
    )
    op.create_index('index_active_storage_attachments_uniqueness', 'active_storage_attachments', ['record_type', 'record_id', 'name', 'blob_id'], unique=False)
    op.create_index('index_active_storage_attachments_on_blob_id', 'active_storage_attachments', ['blob_id'], unique=False)
    op.create_table('direct_messages',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('body', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('chat_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], name='fk_rails_39d803ccea'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_rails_5b30e38729'),
    sa.PrimaryKeyConstraint('id', name='direct_messages_pkey')
    )
    op.create_index('index_direct_messages_on_user_id', 'direct_messages', ['user_id'], unique=False)
    op.create_index('index_direct_messages_on_chat_id', 'direct_messages', ['chat_id'], unique=False)
    op.create_table('birds',
    sa.Column('id', sa.BIGINT(), server_default=sa.text("nextval('birds_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('latin_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('credit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wiki_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='birds_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('schema_migrations',
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version', name='schema_migrations_pkey')
    )
    op.create_table('ar_internal_metadata',
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('key', name='ar_internal_metadata_pkey')
    )
    op.create_table('spots',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bird_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('spot_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bird_id'], ['birds.id'], name='fk_rails_6150ef0317'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_rails_f05e659f8c'),
    sa.PrimaryKeyConstraint('id', name='spots_pkey')
    )
    op.create_index('index_spots_on_user_id', 'spots', ['user_id'], unique=False)
    op.create_index('index_spots_on_bird_id', 'spots', ['bird_id'], unique=False)
    op.create_table('active_storage_blobs',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('metadata', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('byte_size', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='active_storage_blobs_pkey')
    )
    op.create_index('index_active_storage_blobs_on_key', 'active_storage_blobs', ['key'], unique=False)
    op.create_table('chats',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('receiver_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(precision=6), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='chats_pkey')
    )
    op.create_index('index_chats_on_author_id_and_receiver_id', 'chats', ['author_id', 'receiver_id'], unique=False)
    # ### end Alembic commands ###
